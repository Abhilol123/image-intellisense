version: '3.9'
services:
  qdrant-db:
    shm_size: '1g'
    ulimits:
      memlock: -1
      stack: 67108864
    restart: always
    container_name: qdrant-db
    ports:
      - "6333:6333"
    build:
      context: ./qdrant-db
      dockerfile: Dockerfile
  postgres-db:
    shm_size: '1g'
    ulimits:
      memlock: -1
      stack: 67108864
    restart: always
    container_name: postgres-db
    ports:
      - "5432:5432"
    build:
      context: ./postgres-db
      dockerfile: Dockerfile
  redis-db:
    shm_size: '1g'
    ulimits:
      memlock: -1
      stack: 67108864
    restart: always
    container_name: redis-db
    ports:
      - "6379:6379"
    build:
      context: ./redis-db
      dockerfile: Dockerfile
  gateway-service:
    shm_size: '1g'
    ulimits:
      memlock: -1
      stack: 67108864
    restart: always
    container_name: gateway-service
    ports:
      - "9000:9000"
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
  ml-service:
    shm_size: '1g'
    ulimits:
      memlock: -1
      stack: 67108864
    restart: always
    container_name: ml-service
    ports:
      - "8001:8001"
    build:
      context: ./ml-service
      dockerfile: Dockerfile
  upload-service:
    build:
      context: ./upload-service
      dockerfile: Dockerfile
    container_name: upload-service
    ports:
      - "5001:5001"
    environment:
      - UPLOAD_PATH=/uploads
    volumes:
      - ./image_storage:/uploads
  content-retrival-service:
    build:
      context: ./content-retrival-service
      dockerfile: Dockerfile
    container_name: content-retrival-service
    ports:
      - "8090:8090"
    environment:
      DOWNLOAD_PATH: /images 
    volumes:
      - ./image_storage:/images
  frontend-service:
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    container_name: frontend-service
    ports:
      - "8085:80"
